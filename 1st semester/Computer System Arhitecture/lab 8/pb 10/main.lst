     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, fopen, fwrite, printf, fclose               
     8                                  import exit msvcrt.dll    
     9                                  import scanf msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fwrite msvcrt.dll
    12                                  import printf msvcrt.dll
    13                                  import fclose msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18 00000000 00000000<rept>              file_name times 5 dd 0
    19 00000014 257300                      format db "%s", 0
    20 00000017 00000000<rept>              text times 30 dd 0
    21 0000008F 66696C65206E616D65-         mes1 db "file name: ", 0
    21 00000098 3A2000             
    22 0000009B 746578743A2000              mes2 db "text: ", 0
    23 000000A2 7700                        access_mode db "w", 0
    24 000000A4 FFFFFFFF                    file_descriptor dd -1
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ; ...
    29 00000000 68[8F000000]                    push mes1
    30 00000005 FF15[00000000]                  call [printf]
    31 0000000B 83C404                          add esp, 4
    32                                          
    33 0000000E 68[00000000]                    push file_name
    34 00000013 68[14000000]                    push format
    35 00000018 FF15[00000000]                  call [scanf]
    36 0000001E 83C40C                          add esp, 4*3
    37                                          
    38 00000021 68[9B000000]                    push mes2
    39 00000026 FF15[00000000]                  call [printf]
    40 0000002C 83C404                          add esp, 4
    41                                          
    42 0000002F 68[17000000]                    push dword text
    43 00000034 68[14000000]                    push format
    44 00000039 FF15[00000000]                  call [scanf]
    45 0000003F 83C408                          add esp, 4*2
    46                                          
    47 00000042 68[A2000000]                    push access_mode
    48 00000047 68[00000000]                    push file_name
    49 0000004C FF15[00000000]                  call [fopen]
    50 00000052 83C408                          add esp, 8
    51                                          
    52 00000055 A3[A4000000]                    mov [file_descriptor], eax
    53                                          
    54 0000005A 83F800                          cmp eax, 0
    55 0000005D 7423                            je errorr
    56 0000005F 68[17000000]                        push dword text
    57 00000064 FF35[A4000000]                      push dword [file_descriptor]
    58 0000006A FF15[00000000]                      call [fwrite]
    59 00000070 83C408                              add esp, 8
    60                                              
    61 00000073 FF35[A4000000]                      push dword [file_descriptor]
    62 00000079 FF15[00000000]                      call [fclose]
    63 0000007F 83C404                              add esp, 4
    64                                          errorr:
    65                                          
    66                                          ; exit(0)
    67 00000082 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    68 00000084 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
