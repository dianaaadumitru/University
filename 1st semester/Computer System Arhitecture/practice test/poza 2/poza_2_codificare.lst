     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fread, fopen, fclose, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fread msvcrt.dll 
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll  
    13                                  import printf msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17                                      ; ...
    18 00000000 72322E74787400              file_name db "r2.txt", 0
    19 00000007 7200                        access_mode db "r", 0
    20 00000009 FF                          file_descriptor db - 1
    21                                      len equ 100
    22 0000000A 00<rept>                    text times len db 0
    23 0000006E 257300                      format db "%s", 0
    24 00000071 00<rept>                    text_decod times len db 0
    25                                  
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ; ...
    30 00000000 68[07000000]                    push access_mode
    31 00000005 68[00000000]                    push file_name
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp, 8
    34                                          
    35 00000013 A3[09000000]                    mov [file_descriptor], eax
    36 00000018 83F800                          cmp eax, 0
    37 0000001B 7462                            je fopen_error
    38 0000001D FF35[09000000]                      push dword [file_descriptor]
    39 00000023 6A64                                push dword len
    40 00000025 6A01                                push dword 1
    41 00000027 68[0A000000]                        push dword text
    42 0000002C FF15[00000000]                      call [fread]
    43 00000032 83C410                              add esp, 16
    44                                              
    45 00000035 89C1                                mov ecx, eax
    46 00000037 BE[0A000000]                        mov esi, text
    47 0000003C BF00000000                          mov edi, 0
    48 00000041 FC                                  cld
    49 00000042 E319                                jecxz the_end
    50                                                  start_loop:
    51 00000044 AC                                          lodsb
    52 00000045 3C20                                        cmp al, " "
    53 00000047 740B                                        je space
    54 00000049 2C03                                            sub al, 3
    55 0000004B 8887[71000000]                                  mov [text_decod+edi], al
    56 00000051 47                                              inc edi
    57 00000052 EB07                                            jmp here
    58                                                      space:
    59 00000054 8887[71000000]                              mov [text_decod+edi], al
    60 0000005A 47                                          inc edi
    61                                                      here:
    62                                                  
    63 0000005B E2E7                                    loop start_loop
    64                                          
    65                                              the_end:
    66 0000005D 68[71000000]                        push dword text_decod
    67 00000062 68[6E000000]                        push format
    68 00000067 FF15[00000000]                      call [printf]
    69 0000006D 83C408                              add esp, 8
    70                                              
    71 00000070 FF35[09000000]                      push dword [file_descriptor]
    72 00000076 FF15[00000000]                      call [fclose]
    73 0000007C 83C404                              add esp, 4
    74                                          fopen_error:
    75                                      
    76                                          ; exit(0)
    77 0000007F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    78 00000081 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
