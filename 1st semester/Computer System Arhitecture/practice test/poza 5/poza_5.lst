     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, scanf, fread, fprintf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    
     9                                  import fopen msvcrt.dll
    10                                  import fclose msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import fread msvcrt.dll
    13                                  import fprintf msvcrt.dll
    14                                  
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; ...
    19 00000000 00<rept>                    file_name_1 times 10 db 0
    20 0000000A 6F75747075742E7478-         file_name_2 db "output.txt", 0
    20 00000013 7400               
    21 00000015 7200                        access_mode_1 db "r", 0
    22 00000017 7700                        access_mode_2 db "w", 0
    23 00000019 FFFFFFFF                    file_descriptor dd -1
    24 0000001D 00000000                    n dd 0
    25 00000021 00                          char db 0
    26                                      len equ 100
    27 00000022 00<rept>                    text times len db 0
    28 00000086 257300                      format_1 db "%s", 0
    29 00000089 257300                      format_2 db "%s", 0
    30 0000008C 256400                      format_3 db "%d", 0
    31 0000008F 00<rept>                    text2 times len db 0
    32                                  
    33                                  ; our code starts here
    34                                  segment code use32 class=code
    35                                      start:
    36                                          ; ...
    37 00000000 68[00000000]                    push file_name_1
    38 00000005 68[86000000]                    push dword format_1
    39 0000000A FF15[00000000]                  call [scanf]
    40 00000010 83C408                          add esp, 8
    41                                          
    42 00000013 68[1D000000]                    push dword n
    43 00000018 68[8C000000]                    push format_3
    44 0000001D FF15[00000000]                  call [scanf]
    45 00000023 83C408                          add esp, 8
    46                                          
    47 00000026 68[21000000]                    push char
    48 0000002B 68[89000000]                    push format_2
    49 00000030 FF15[00000000]                  call [scanf]
    50 00000036 83C408                          add esp, 8
    51                                          
    52                                          
    53 00000039 68[15000000]                    push dword access_mode_1
    54 0000003E 68[00000000]                    push file_name_1
    55 00000043 FF15[00000000]                  call [fopen]
    56 00000049 83C408                          add esp, 8
    57                                          
    58 0000004C A3[19000000]                    mov [file_descriptor], eax
    59                                          
    60 00000051 83F800                          cmp eax, 0
    61 00000054 747E                            je error_fopen
    62 00000056 FF35[19000000]                      push dword [file_descriptor]
    63 0000005C 6A64                                push len
    64 0000005E 6A01                                push 1
    65 00000060 68[22000000]                        push text
    66 00000065 FF15[00000000]                      call [fread]
    67 0000006B 83C410                              add esp, 16
    68                                              
    69 0000006E 89C1                                mov ecx, eax
    70 00000070 BE[22000000]                        mov esi, text
    71 00000075 BF00000000                          mov edi, 0
    72 0000007A 8B1D[1D000000]                      mov ebx, [n]
    73                                              
    74 00000080 E343                                jecxz the_end
    75                                                  start_loop:
    76 00000082 AC                                          lodsb
    77 00000083 3C20                                        cmp al, " "
    78 00000085 740F                                        je space
    79 00000087 83FB00                                          cmp ebx, 0
    80 0000008A 740A                                            je enough
    81 0000008C 8887[8F000000]                                      mov [text2 + edi], al
    82 00000092 47                                                  inc edi
    83 00000093 4B                                                  dec ebx
    84 00000094 EB2D                                                jmp here_2
    85                                                          
    86                                                      space:
    87                                                      enough:
    88 00000096 83FB00                                      cmp ebx, 0
    89 00000099 7415                                        je enough_2
    90                                                          here:
    91 0000009B 8A15[21000000]                                  mov dl, [char]
    92 000000A1 8897[8F000000]                                  mov [text2 + edi], dl
    93 000000A7 47                                              inc edi
    94 000000A8 4B                                              dec ebx
    95 000000A9 83FB00                                          cmp ebx, 0
    96 000000AC 7402                                            je enough_2
    97 000000AE EBEB                                            jmp here
    98                                                      
    99                                                      enough_2:
   100 000000B0 3C20                                        cmp al, " "
   101 000000B2 750F                                        jne jump
   102 000000B4 8B1D[1D000000]                                  mov ebx, [n]
   103 000000BA B020                                            mov al, " "
   104 000000BC 8887[8F000000]                                  mov [text2 + edi], al
   105 000000C2 47                                              inc edi
   106                                                      jump:
   107                                                      here_2:
   108                                                      
   109 000000C3 E2BD                                    loop start_loop
   110                                              
   111                                              the_end:
   112                                              
   113                                              
   114 000000C5 FF35[19000000]                      push dword [file_descriptor]
   115 000000CB FF15[00000000]                      call [fclose]
   116 000000D1 83C404                              add esp, 4
   117                                          error_fopen:
   118 000000D4 C705[19000000]FFFF-             mov dword [file_descriptor], -1
   118 000000DC FFFF               
   119                                          
   120 000000DE 68[17000000]                    push access_mode_2
   121 000000E3 68[0A000000]                    push file_name_2
   122 000000E8 FF15[00000000]                  call [fopen]
   123 000000EE 83C408                          add esp, 8
   124                                          
   125 000000F1 A3[19000000]                    mov [file_descriptor], eax
   126                                          
   127 000000F6 83F800                          cmp eax, 0
   128 000000F9 7423                            je errorr
   129 000000FB 68[8F000000]                        push dword text2
   130 00000100 FF35[19000000]                      push dword [file_descriptor]
   131 00000106 FF15[00000000]                      call [fprintf]
   132 0000010C 83C408                              add esp, 8
   133                                              
   134 0000010F FF35[19000000]                      push dword [file_descriptor]
   135 00000115 FF15[00000000]                      call [fclose]
   136 0000011B 83C404                              add esp, 4
   137                                          
   138                                          errorr:
   139                                      
   140                                          ; exit(0)
   141 0000011E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   142 00000120 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
