     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, scanf, fopen, fclose, fprintf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import fprintf msvcrt.dll    
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 616263642E74787400          file_name db "abcd.txt", 0
    18 00000009 7700                        access_mode db "w", 0
    19 0000000B FFFFFFFF                    file_descriptor dd -1
    20 0000000F 00000000                    n dd 0
    21 00000013 256300                      format db "%c", 0
    22 00000016 00<rept>                    text times 50 db 0
    23 00000048 00<rept>                    text2 times 50 db 0
    24 0000007A 00                          len db 0
    25 0000007B 00                          len2 db 0
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30                                          ; ...
    31 00000000 68[09000000]                    push access_mode
    32 00000005 68[00000000]                    push file_name
    33 0000000A FF15[00000000]                  call [fopen]
    34 00000010 83C408                          add esp, 8
    35                                          
    36 00000013 A3[0B000000]                    mov [file_descriptor], eax
    37                                          
    38 00000018 83F800                          cmp eax, 0
    39 0000001B 0F8426010000                    je error_fopen
    40 00000021 BF00000000                      mov edi, 0
    41                                          
    42 00000026 68[0F000000]                    push dword n
    43 0000002B 68[13000000]                    push format
    44 00000030 FF15[00000000]                  call [scanf]
    45 00000036 83C408                          add esp, 4*2
    46                                          here:
    47                                          
    48                                          
    49 00000039 A1[0F000000]                    mov eax, [n]
    50 0000003E 83F821                          cmp eax, "!"
    51 00000041 7472                            je end_read
    52 00000043 83E830                              sub eax, "0"
    53 00000046 A3[0F000000]                        mov [n], eax
    54 0000004B 66A1[0F000000]                      mov ax, [n]
    55 00000051 668B15[11000000]                    mov dx, [n+2]
    56 00000058 66BB0200                            mov bx, 2
    57 0000005C 66F7F3                              div bx
    58 0000005F 6683FA00                            cmp dx, 0
    59 00000063 751E                                jne not_even
    60 00000065 8A1D[7A000000]                          mov bl, [len]
    61 0000006B FEC3                                    inc bl
    62 0000006D 881D[7A000000]                          mov [len], bl
    63 00000073 8B0D[0F000000]                          mov ecx, [n]
    64 00000079 80C130                                  add cl, "0"
    65 0000007C 888F[16000000]                          mov [text+edi], cl
    66 00000082 47                                      inc edi
    67                                              
    68                                              not_even:
    69 00000083 68[0F000000]                            push dword n
    70 00000088 68[13000000]                    push format
    71 0000008D FF15[00000000]                  call [scanf]
    72 00000093 83C408                          add esp, 4*2
    73                                          
    74 00000096 A1[0F000000]                    mov eax, [n]
    75 0000009B 83F821                          cmp eax, "!"
    76 0000009E 7415                            je end_read
    77                                  
    78 000000A0 68[0F000000]                    push dword n
    79 000000A5 68[13000000]                    push format
    80 000000AA FF15[00000000]                  call [scanf]
    81 000000B0 83C408                          add esp, 4*2
    82                                  
    83 000000B3 EB84                            jmp here
    84                                          
    85                                          end_read:
    86 000000B5 8A1D[7A000000]                  mov bl, [len]
    87 000000BB 881D[7B000000]                  mov [len2], bl
    88 000000C1 BE[16000000]                    mov esi, text
    89 000000C6 BF00000000                      mov edi, 0
    90                                          bubble_sort:
    91                                              
    92 000000CB 8A1D[7B000000]                      mov bl, [len2]
    93 000000D1 881D[7A000000]                      mov [len], bl
    94 000000D7 B101                                mov cl, 1
    95 000000D9 BE[16000000]                        mov esi, text
    96                                              
    97 000000DE AC                                  lodsb
    98                                              here3:
    99 000000DF 88C3                                mov bl, al
   100 000000E1 AC                                  lodsb
   101 000000E2 38C3                                cmp bl, al
   102 000000E4 7316                                jae lower
   103 000000E6 88DA                                    mov dl, bl
   104 000000E8 88C3                                    mov bl, al
   105 000000EA 88D0                                    mov al, dl
   106 000000EC B100                                    mov cl, 0
   107 000000EE 889F[16000000]                          mov [text+edi], bl
   108 000000F4 47                                      inc edi
   109 000000F5 8887[16000000]                          mov [text+edi], al
   110 000000FB 4F                                      dec edi
   111                                              lower:
   112 000000FC 47                                      inc edi
   113 000000FD 8A15[7A000000]                          mov dl, [len]
   114 00000103 FECA                                    dec dl
   115 00000105 8815[7A000000]                          mov [len], dl
   116 0000010B 8A15[7A000000]                      mov dl, [len]
   117 00000111 80FA01                              cmp dl, 1
   118 00000114 7602                                jbe end_for
   119 00000116 EBC7                                jmp here3
   120                                              end_for:
   121 00000118 BF00000000                          mov edi, 0
   122 0000011D 80F900                              cmp cl, 0
   123 00000120 7502                                jne end_sort
   124                                              
   125                                          
   126 00000122 EBA7                            jmp bubble_sort
   127                                          end_sort:
   128                                          
   129 00000124 68[16000000]                    push text
   130 00000129 FF35[0B000000]                  push dword [file_descriptor]
   131 0000012F FF15[00000000]                  call [fprintf]
   132 00000135 83C408                          add esp, 8
   133                                          
   134                                         
   135 00000138 FF35[0B000000]                  push dword [file_descriptor]
   136 0000013E FF15[00000000]                  call [fclose]
   137 00000144 83C404                          add esp, 4
   138                                          error_fopen:
   139                                      
   140                                          ; exit(0)
   141 00000147 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   142 00000149 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
