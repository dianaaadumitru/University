        -:    0:Source:C:/Users/diana/Desktop/uni work/2nd sem/OOP/a45-913-Dumitru-Diana/repo/repo.cpp
        -:    0:Graph:C:\Users\diana\Desktop\uni work\2nd sem\OOP\a45-913-Dumitru-Diana\cmake-build-debug-coverage-coverage-coverage\CMakeFiles\a45_913_Dumitru_Diana.dir\repo\repo.cpp.gcno
        -:    0:Data:C:\Users\diana\Desktop\uni work\2nd sem\OOP\a45-913-Dumitru-Diana\cmake-build-debug-coverage-coverage-coverage\CMakeFiles\a45_913_Dumitru_Diana.dir\repo\repo.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:#include "repo.h"
        -:    3:
       29:    4:bool Repo::add_tutorial(const Tutorial & t)
       29:    4-block  0
        -:    5:///add a new tutorial to the list
        -:    6:///returns true if the tutorial was added, false otherwise
        -:    7:{
       58:    8:    Tutorial tutorial = find_by_presenter_and_title(t.get_presenter(), t.get_title());
       29:    8-block  0
       29:    8-block  1
       29:    8-block  2
       29:    8-block  3
       29:    8-block  4
       29:    8-block  5
    %%%%%:    8-block  6
    %%%%%:    8-block  7
    %%%%%:    8-block  8
       29:    9:    if (tutorial.get_presenter() != "" || tutorial.get_title() != "")
       29:    9-block  0
       29:    9-block  1
       26:    9-block  2
       26:    9-block  3
       26:    9-block  4
        3:    9-block  5
       26:    9-block  6
       29:    9-block  7
       26:    9-block  8
       29:    9-block  9
       29:    9-block 10
       29:    9-block 11
    %%%%%:    9-block 12
    %%%%%:    9-block 13
    %%%%%:    9-block 14
    %%%%%:    9-block 15
    %%%%%:    9-block 16
    %%%%%:    9-block 17
        3:   10:        return false;
        3:   10-block  0
       26:   11:    this->tutorials.add(t);
       26:   11-block  0
       26:   11-block  1
       26:   11-block  2
    %%%%%:   11-block  3
       26:   12:    return true;
        -:   13:}
        -:   14:
       58:   15:Tutorial Repo::find_by_presenter_and_title(const std::string& presenter, const std:: string& title)
       58:   15-block  0
        -:   16:///search in the list of tutorials for a tutorial by its title and presenter
        -:   17:///returns the tutorial if it exists or an empty tutorial otherwise
        -:   18:{
       58:   19:    Tutorial* tutorials_from_array = this->tutorials.get_all_elems();
       58:   19-block  0
        -:   20:
      193:   21:    for(int i = 0; i < this->tutorials.getSize(); i++)
      168:   21-block  0
      110:   21-block  1
       25:   21-block  2
        -:   22:    {
      245:   23:        Tutorial s = tutorials_from_array[i];
      135:   23-block  0
      110:   23-block  1
    %%%%%:   23-block  2
      135:   24:        if(s.get_presenter() == presenter && s.get_title() == title)
      135:   24-block  0
      135:   24-block  1
       40:   24-block  2
       40:   24-block  3
       25:   24-block  4
      110:   24-block  5
      135:   24-block  6
       40:   24-block  7
      135:   24-block  8
      135:   24-block  9
      135:   24-block 10
    %%%%%:   24-block 11
    %%%%%:   24-block 12
    %%%%%:   24-block 13
    %%%%%:   24-block 14
    %%%%%:   24-block 15
    %%%%%:   24-block 16
      135:   25:            return s;
       25:   25-block  0
      110:   25-block  1
      135:   25-block  2
        -:   26:    }
       58:   27:    return Tutorial{};
       33:   27-block  0
       58:   27-block  1
        -:   28:}
        -:   29:
       12:   30:int Repo::find_pos_tutorial(const Tutorial& t)
       12:   30-block  0
        -:   31:///search in the list of tutorials for a given tutorial
        -:   32:///returns the index of the tutorial if it exists or an empty tutorial otherwise
        -:   33:{
       27:   34:    for (int i = 0; i < this->tutorials.getSize(); ++i) {
       12:   34-block  0
       27:   34-block  1
       15:   34-block  2
       25:   35:        if (this->tutorials[i].get_title() == t.get_title() && this->tutorials[i].get_presenter() == t.get_presenter())
       25:   35-block  0
       25:   35-block  1
       25:   35-block  2
       15:   35-block  3
       15:   35-block  4
       15:   35-block  5
       10:   35-block  6
       15:   35-block  7
       25:   35-block  8
       15:   35-block  9
       25:   35-block 10
       15:   35-block 11
       25:   35-block 12
       25:   35-block 13
       25:   35-block 14
       25:   35-block 15
       25:   35-block 16
    %%%%%:   35-block 17
    %%%%%:   35-block 18
    %%%%%:   35-block 19
    %%%%%:   35-block 20
    %%%%%:   35-block 21
    %%%%%:   35-block 22
    %%%%%:   35-block 23
    %%%%%:   35-block 24
    %%%%%:   35-block 25
    %%%%%:   35-block 26
    %%%%%:   35-block 27
       10:   36:            return i;
       10:   36-block  0
        -:   37:    }
       12:   38:    return -1;
        2:   38-block  0
       12:   38-block  1
        -:   39:}
        -:   40:
       11:   41:bool Repo::remove_tutorial(const std::string& presenter, const std:: string& title)
       11:   41-block  0
        -:   42:///updates the title the presenter or the link of a tutorial, depending on the user option
        -:   43:///returns true if the tutorial was updated, false otherwise
        -:   44:{
       22:   45:    Tutorial t = this->find_by_presenter_and_title(presenter, title);
       11:   45-block  0
       11:   45-block  1
       11:   45-block  2
    %%%%%:   45-block  3
       11:   46:    if (t.get_presenter() == "" && t.get_title() == "")
       11:   46-block  0
       11:   46-block  1
       11:   46-block  2
        2:   46-block  3
        2:   46-block  4
        2:   46-block  5
        2:   46-block  6
        9:   46-block  7
       11:   46-block  8
        2:   46-block  9
       11:   46-block 10
       11:   46-block 11
       11:   46-block 12
    %%%%%:   46-block 13
    %%%%%:   46-block 14
    %%%%%:   46-block 15
    %%%%%:   46-block 16
    %%%%%:   46-block 17
    %%%%%:   46-block 18
        2:   47:        return false;
        2:   47-block  0
        -:   48:
        9:   49:    int pos = this->find_pos_tutorial(t);
        9:   49-block  0
        9:   50:    this->tutorials.delete_elem(pos);
        9:   50-block  0
        9:   51:    return true;
        9:   51-block  0
        -:   52:}
        -:   53:
        7:   54:bool Repo::update_tutorial(const std::string& presenter, const std:: string& title, int op, const std::string& new_elem)
        7:   54-block  0
        -:   55:///updates the title the presenter or the link of a tutorial, depending on the user option
        -:   56:///returns true if the tutorial was updated, false otherwise
        -:   57:{
       14:   58:    Tutorial t = this->find_by_presenter_and_title(presenter, title);
        7:   58-block  0
        7:   58-block  1
        7:   58-block  2
    %%%%%:   58-block  3
        -:   59:    bool ok;
        7:   60:    if (t.get_presenter() == "" && t.get_title() == "")
        7:   60-block  0
        7:   60-block  1
        7:   60-block  2
        1:   60-block  3
        1:   60-block  4
        1:   60-block  5
        1:   60-block  6
        6:   60-block  7
        7:   60-block  8
        1:   60-block  9
        7:   60-block 10
        7:   60-block 11
        7:   60-block 12
    %%%%%:   60-block 13
    %%%%%:   60-block 14
    %%%%%:   60-block 15
    %%%%%:   60-block 16
    %%%%%:   60-block 17
    %%%%%:   60-block 18
    %%%%%:   60-block 19
        1:   61:        return false;
        1:   61-block  0
        6:   62:    if (op == 1)
        6:   62-block  0
        -:   63:    {
        6:   64:        Tutorial newt {new_elem, t.get_presenter(), t.get_duration(), t.get_no_of_likes(), t.get_link()};
        3:   64-block  0
        3:   64-block  1
        3:   64-block  2
        3:   64-block  3
        3:   64-block  4
        3:   64-block  5
        2:   64-block  6
        2:   64-block  7
        1:   64-block  8
    %%%%%:   64-block  9
    %%%%%:   64-block 10
    %%%%%:   64-block 11
    %%%%%:   64-block 12
    %%%%%:   64-block 13
    %%%%%:   64-block 14
        3:   65:        ok = this->add_tutorial(newt);
        3:   66:        if (!ok)
        3:   66-block  0
        1:   67:            return false;
        1:   67-block  0
        3:   68:        this->remove_tutorial(presenter, title);
        2:   68-block  0
        2:   68-block  1
        3:   68-block  2
        -:   69:    }
        3:   70:    else if (op == 2)
        3:   70-block  0
        -:   71:    {
        4:   72:        Tutorial newt {t.get_title(), new_elem, t.get_duration(), t.get_no_of_likes(), t.get_link()};
        2:   72-block  0
        2:   72-block  1
        2:   72-block  2
        2:   72-block  3
        2:   72-block  4
        2:   72-block  5
        1:   72-block  6
        1:   72-block  7
        1:   72-block  8
    %%%%%:   72-block  9
    %%%%%:   72-block 10
    %%%%%:   72-block 11
    %%%%%:   72-block 12
    %%%%%:   72-block 13
        2:   73:        ok = this->add_tutorial(newt);
        2:   74:        if (!ok)
        2:   74-block  0
        1:   75:            return false;
        1:   75-block  0
        2:   76:        this->remove_tutorial(presenter, title);
        1:   76-block  0
        1:   76-block  1
        2:   76-block  2
        -:   77:    }
        -:   78:    else
        -:   79:    {
        1:   80:        this->remove_tutorial(presenter, title);
        1:   80-block  0
        2:   81:        Tutorial newt {t.get_title(), t.get_presenter(), t.get_duration(), t.get_no_of_likes(), new_elem};
        1:   81-block  0
        1:   81-block  1
        1:   81-block  2
        1:   81-block  3
        1:   81-block  4
        1:   81-block  5
        1:   81-block  6
    %%%%%:   81-block  7
    %%%%%:   81-block  8
    %%%%%:   81-block  9
    %%%%%:   81-block 10
    %%%%%:   81-block 11
    %%%%%:   81-block 12
        1:   82:        this->add_tutorial(newt);
        -:   83:    }
        4:   84:    return true;
        4:   84-block  0
        -:   85:}
        -:   86:
        3:   87:bool Repo::update_tutorial_duration(const std::string& presenter, const std:: string& title, double min, double sec)
        3:   87-block  0
        -:   88:///updates the title the duration of a tutorial
        -:   89:///returns true if the tutorial was updated, false otherwise
        -:   90:{
        6:   91:    Tutorial t = this->find_by_presenter_and_title(presenter, title);
        3:   91-block  0
        3:   91-block  1
        3:   91-block  2
    %%%%%:   91-block  3
        3:   92:    if (t.get_presenter() == "" && t.get_title() == "")
        3:   92-block  0
        3:   92-block  1
        3:   92-block  2
        2:   92-block  3
        2:   92-block  4
        2:   92-block  5
        2:   92-block  6
        1:   92-block  7
        3:   92-block  8
        2:   92-block  9
        3:   92-block 10
        3:   92-block 11
        3:   92-block 12
    %%%%%:   92-block 13
    %%%%%:   92-block 14
    %%%%%:   92-block 15
    %%%%%:   92-block 16
    %%%%%:   92-block 17
    %%%%%:   92-block 18
    %%%%%:   92-block 19
        2:   93:        return false;
        2:   93-block  0
        1:   94:    Duration d {min, sec};
        1:   94-block  0
        1:   95:    this->remove_tutorial(presenter, title);
        2:   96:    Tutorial newt {t.get_title(), t.get_presenter(), d, t.get_no_of_likes(), t.get_link()};
        1:   96-block  0
        1:   96-block  1
        1:   96-block  2
        1:   96-block  3
        1:   96-block  4
        1:   96-block  5
        1:   96-block  6
    %%%%%:   96-block  7
    %%%%%:   96-block  8
    %%%%%:   96-block  9
    %%%%%:   96-block 10
        1:   97:    this->add_tutorial(newt);
        1:   98:    return true;
        -:   99:}
        -:  100:
        3:  101:bool Repo::update_tutorial_likes(const std::string& presenter, const std:: string& title, int likes)
        3:  101-block  0
        -:  102:///updates the title the likes of a tutorial
        -:  103:///returns true if the tutorial was updated, false otherwise
        -:  104:{
        6:  105:    Tutorial t = this->find_by_presenter_and_title(presenter, title);
        3:  105-block  0
        3:  105-block  1
        3:  105-block  2
    %%%%%:  105-block  3
        3:  106:    if (t.get_presenter() == "" && t.get_title() == "")
        3:  106-block  0
        3:  106-block  1
        3:  106-block  2
        1:  106-block  3
        1:  106-block  4
        1:  106-block  5
        1:  106-block  6
        2:  106-block  7
        3:  106-block  8
        1:  106-block  9
        3:  106-block 10
        3:  106-block 11
        3:  106-block 12
    %%%%%:  106-block 13
    %%%%%:  106-block 14
    %%%%%:  106-block 15
    %%%%%:  106-block 16
    %%%%%:  106-block 17
    %%%%%:  106-block 18
    %%%%%:  106-block 19
        1:  107:        return false;
        1:  107-block  0
        2:  108:    this->remove_tutorial(presenter, title);
        2:  108-block  0
        4:  109:    Tutorial newt {t.get_title(), t.get_presenter(), t.get_duration(), likes, t.get_link()};
        2:  109-block  0
        2:  109-block  1
        2:  109-block  2
        2:  109-block  3
        2:  109-block  4
        2:  109-block  5
        2:  109-block  6
    %%%%%:  109-block  7
    %%%%%:  109-block  8
    %%%%%:  109-block  9
    %%%%%:  109-block 10
        2:  110:    this->add_tutorial(newt);
        2:  111:    return true;
        4:  112:}
        1:  112-block  0
        1:  112-block  1
        1:  112-block  2
        1:  112-block  3
        1:  112-block  4
