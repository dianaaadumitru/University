        -:    0:Source:C:/Users/diana/Desktop/uni work/2nd sem/OOP/a45-913-Dumitru-Diana/iterator/iterator.cpp
        -:    0:Graph:C:\Users\diana\Desktop\uni work\2nd sem\OOP\a45-913-Dumitru-Diana\cmake-build-debug-coverage-coverage\CMakeFiles\a45_913_Dumitru_Diana.dir\iterator\iterator.cpp.gcno
        -:    0:Data:C:\Users\diana\Desktop\uni work\2nd sem\OOP\a45-913-Dumitru-Diana\cmake-build-debug-coverage-coverage\CMakeFiles\a45_913_Dumitru_Diana.dir\iterator\iterator.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "iterator.h"
        -:    2:
        8:    3:Iterator::Iterator() {
        4:    3-block  0
        4:    3-block  1
        4:    4:    this->current = 0;
        4:    5:}
        -:    6:
        8:    7:Tutorial Iterator::get_current_tutorial()
        8:    7-block  0
        -:    8:///returns the current tutorial
        -:    9:///if we got to the end of the list, we restart it
        -:   10:{
        8:   11:    if (this->current == this->tutorials.getSize())
        8:   11-block  0
        2:   12:        this->current = 0;
        2:   12-block  0
        -:   13:
        8:   14:    return this->tutorials[this->current];
        8:   14-block  0
        -:   15:}
        -:   16:
        3:   17:void Iterator::open()
        3:   17-block  0
        -:   18:///opens the current tutorial
        -:   19:{
        3:   20:    if (this->tutorials.getSize() == 0)
        3:   20-block  0
        1:   21:        return;
        1:   21-block  0
        2:   22:    this->current = 0;
        5:   23:    Tutorial t = this->get_current_tutorial();
        2:   23-block  0
        2:   23-block  1
        3:   23-block  2
    %%%%%:   23-block  3
        2:   24:    t.open_link();
        2:   24-block  0
        -:   25:}
        -:   26:
        4:   27:void Iterator::next()
        4:   27-block  0
        -:   28:///opens the next tutorial
        -:   29:{
        4:   30:    if (this->tutorials.getSize() == 0)
        4:   30-block  0
        1:   31:        return;
        1:   31-block  0
        3:   32:    this->current++;
        7:   33:    Tutorial t = this->get_current_tutorial();
        3:   33-block  0
        3:   33-block  1
        4:   33-block  2
    %%%%%:   33-block  3
        3:   34:    t.open_link();
        3:   34-block  0
        -:   35:}
        -:   36:
        6:   37:void Iterator::add(const Tutorial t)
        6:   37-block  0
        -:   38:///adds a tutorial to the dynamic vector
        -:   39:{
        6:   40:    this->tutorials.add(t);
        6:   40-block  0
        6:   40-block  1
    %%%%%:   40-block  2
        6:   41:}
        -:   42:
        3:   43:void Iterator::iterator_empty()
        3:   43-block  0
        -:   44:///empties the iterator
        -:   45:{
        8:   46:    while (this->tutorials.getSize() != 0)
        8:   46-block  0
        5:   47:        this->tutorials.delete_elem(0);
        5:   47-block  0
        3:   48:}
        -:   49:
        2:   50:void Iterator::update_likes(int pos) {
        2:   50-block  0
        2:   51:    this->tutorials[pos].like();
        2:   51-block  0
        4:   52:}
        1:   52-block  0
        1:   52-block  1
        1:   52-block  2
        1:   52-block  3
        1:   52-block  4
