Program state
ID: 1 
Exe Stack: {(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))))) | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))) | Ref(int) v1 | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))) | Ref(int) v1 | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))) | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))))) | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))) | Ref(int) v2 | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))) | Ref(int) v2 | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))) | Ref(int) v3 | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))) | Ref(int) v3 | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))) | int cnt | } 
Sym Table: v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))) | int cnt | } 
Sym Table: v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))) | } 
Sym Table: cnt->0, v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 2);(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))))) | } 
Sym Table: cnt->0, v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))) | new(v1, 2) | } 
Sym Table: cnt->0, v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))) | new(v1, 2) | } 
Sym Table: cnt->0, v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(0, int), v3->(0, int),  
Heap: 1 -> 2  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 3);(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(0, int), v3->(0, int),  
Heap: 1 -> 2  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))) | new(v2, 3) | } 
Sym Table: cnt->0, v1->(1, int), v2->(0, int), v3->(0, int),  
Heap: 1 -> 2  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))) | new(v2, 3) | } 
Sym Table: cnt->0, v1->(1, int), v2->(0, int), v3->(0, int),  
Heap: 1 -> 2  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(0, int),  
Heap: 1 -> 2 2 -> 3  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v3, 4);(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(0, int),  
Heap: 1 -> 2 2 -> 3  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))) | new(v3, 4) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(0, int),  
Heap: 1 -> 2 2 -> 3  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))) | new(v3, 4) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(0, int),  
Heap: 1 -> 2 2 -> 3  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newBarrier(cnt, rH(v2));(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))) | newBarrier(cnt, rH(v2)) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))) | newBarrier(cnt, rH(v2)) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))));(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))) | fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))) | fork((await(cnt);(wH(v1,rH(v1)*10);print(rH(v1))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))));(await(cnt);print(rH(v3)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(await(cnt);(wH(v1,rH(v1)*10);print(rH(v1)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(await(cnt);print(rH(v3))) | fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);print(rH(v1))) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(await(cnt);print(rH(v3))) | fork((await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);print(rH(v1))) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(await(cnt);print(rH(v3))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);print(rH(v1))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(await(cnt);print(rH(v3))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);print(rH(v1))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(await(cnt);(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(rH(v3)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {print(rH(v1)) | wH(v1,rH(v1)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(rH(v3)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {print(rH(v1)) | wH(v1,rH(v1)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(rH(v3)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {print(rH(v1)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(rH(v3)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {print(rH(v1)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);(wH(v2,rH(v2)*10);print(rH(v2)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {} 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 10 
Exe Stack: {} 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);print(rH(v2))) | wH(v2,rH(v2)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);print(rH(v2))) | wH(v2,rH(v2)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);print(rH(v2))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);print(rH(v2))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 100 
Exe Stack: {print(rH(v2)) | wH(v2,rH(v2)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 100 
Exe Stack: {print(rH(v2)) | wH(v2,rH(v2)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 100 
Exe Stack: {print(rH(v2)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 300 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 100 
Exe Stack: {print(rH(v2)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 300 3 -> 4  
Output Console: 4 20  
File Table:  
 


Program state
ID: 100 
Exe Stack: {} 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 300 3 -> 4  
Output Console: 4 20 300  
File Table:  
 


