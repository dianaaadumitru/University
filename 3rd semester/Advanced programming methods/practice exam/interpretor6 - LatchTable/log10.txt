Program state
ID: 1 
Exe Stack: {(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))))))))) | } 
Sym Table:  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))))))) | Ref(int) v1 | } 
Sym Table:  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))))))) | Ref(int) v1 | } 
Sym Table:  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))))))) | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))))))) | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))))))) | Ref(int) v2 | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))))))) | Ref(int) v2 | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))))) | Ref(int) v3 | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))))) | Ref(int) v3 | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))))) | int cnt | } 
Sym Table: v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))))) | int cnt | } 
Sym Table: v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))))) | } 
Sym Table: cnt->0, v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 2);(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))))) | } 
Sym Table: cnt->0, v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))) | new(v1, 2) | } 
Sym Table: cnt->0, v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))) | new(v1, 2) | } 
Sym Table: cnt->0, v1->(0, int), v2->(0, int), v3->(0, int),  
Heap:  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(0, int), v3->(0, int),  
Heap: 1 -> 2  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 3);(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(0, int), v3->(0, int),  
Heap: 1 -> 2  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))) | new(v2, 3) | } 
Sym Table: cnt->0, v1->(1, int), v2->(0, int), v3->(0, int),  
Heap: 1 -> 2  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))) | new(v2, 3) | } 
Sym Table: cnt->0, v1->(1, int), v2->(0, int), v3->(0, int),  
Heap: 1 -> 2  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(0, int),  
Heap: 1 -> 2 2 -> 3  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v3, 4);(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(0, int),  
Heap: 1 -> 2 2 -> 3  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))) | new(v3, 4) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(0, int),  
Heap: 1 -> 2 2 -> 3  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))) | new(v3, 4) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(0, int),  
Heap: 1 -> 2 2 -> 3  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLatch(cnt, rH(v2));(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt))))) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))) | newLatch(cnt, rH(v2)) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))) | newLatch(cnt, rH(v2)) | } 
Sym Table: cnt->0, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))));(await(cnt);(print(100);countDown(cnt)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(await(cnt);(print(100);countDown(cnt))) | fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(await(cnt);(print(100);countDown(cnt))) | fork((wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(await(cnt);(print(100);countDown(cnt))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(await(cnt);(print(100);countDown(cnt))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))))) | wH(v1,rH(v1)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))))) | wH(v1,rH(v1)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 2 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(print(rH(v1));(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))) | print(rH(v1)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))) | print(rH(v1)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console:  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {(countDown(cnt);fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))) | countDown(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))) | countDown(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20  
Latch Table: 2->3, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {fork((wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 10 
Exe Stack: {} 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v2,rH(v2)*10);(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))) | wH(v2,rH(v2)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))) | wH(v2,rH(v2)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 3 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(print(rH(v2));(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))) | print(rH(v2)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))) | print(rH(v2)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {(countDown(cnt);fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))) | countDown(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))) | countDown(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30  
Latch Table: 2->2, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {fork((wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt)))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 100 
Exe Stack: {} 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v3,rH(v3)*10);(print(rH(v3));countDown(cnt))) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(print(rH(v3));countDown(cnt)) | wH(v3,rH(v3)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(print(rH(v3));countDown(cnt)) | wH(v3,rH(v3)*10) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 4  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(print(rH(v3));countDown(cnt)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(print(rH(v3));countDown(cnt)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {countDown(cnt) | print(rH(v3)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {countDown(cnt) | print(rH(v3)) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {countDown(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {countDown(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40  
Latch Table: 2->1, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1000 
Exe Stack: {} 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(100);countDown(cnt)) | await(cnt) | } 
Sym Table: cnt->2, v1->(1, int), v2->(2, int), v3->(3, int),  
Heap: 1 -> 20 2 -> 30 3 -> 40  
Output Console: 20 10 30 100 40 1000  
Latch Table: 2->0, 
File Table:  
 


