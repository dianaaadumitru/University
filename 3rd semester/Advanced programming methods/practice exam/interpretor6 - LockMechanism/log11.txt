Program state
ID: 1 
Exe Stack: {(Ref(int) v1;(Ref(int) v2;(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))))) | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))) | Ref(int) v1 | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))) | Ref(int) v1 | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))) | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(Ref(int) v2;(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))))) | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))) | Ref(int) v2 | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))) | Ref(int) v2 | } 
Sym Table: v1->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))))) | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))) | int x | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))) | int x | } 
Sym Table: v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))) | } 
Sym Table: x->0, v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int q;(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))))) | } 
Sym Table: x->0, v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))) | int q | } 
Sym Table: x->0, v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))) | int q | } 
Sym Table: x->0, v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))) | } 
Sym Table: q->0, x->0, v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v1, 20);(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))))) | } 
Sym Table: q->0, x->0, v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))) | new(v1, 20) | } 
Sym Table: q->0, x->0, v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))) | new(v1, 20) | } 
Sym Table: q->0, x->0, v1->(0, int), v2->(0, int),  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))) | } 
Sym Table: q->0, x->0, v1->(1, int), v2->(0, int),  
Heap: 1 -> 20  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(new(v2, 30);(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))))) | } 
Sym Table: q->0, x->0, v1->(1, int), v2->(0, int),  
Heap: 1 -> 20  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))) | new(v2, 30) | } 
Sym Table: q->0, x->0, v1->(1, int), v2->(0, int),  
Heap: 1 -> 20  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))) | new(v2, 30) | } 
Sym Table: q->0, x->0, v1->(1, int), v2->(0, int),  
Heap: 1 -> 20  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))) | } 
Sym Table: q->0, x->0, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLock(x);(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))))) | } 
Sym Table: q->0, x->0, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))) | newLock(x) | } 
Sym Table: q->0, x->0, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))) | newLock(x) | } 
Sym Table: q->0, x->0, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))));(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))) | fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x))))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))) | fork((fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x))))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(newLock(q);(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(fork((lock(x);(wH(v1,rH(v1)-1);unlock(x))));(lock(x);(wH(v1,rH(v1)*10);unlock(x)))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))) | newLock(q) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(lock(x);(wH(v1,rH(v1)*10);unlock(x))) | fork((lock(x);(wH(v1,rH(v1)-1);unlock(x)))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))) | newLock(q) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(lock(x);(wH(v1,rH(v1)*10);unlock(x))) | fork((lock(x);(wH(v1,rH(v1)-1);unlock(x)))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(lock(x);(wH(v1,rH(v1)*10);unlock(x))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(lock(x);(wH(v1,rH(v1)-1);unlock(x))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))));(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(lock(x);(wH(v1,rH(v1)*10);unlock(x))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(lock(x);(wH(v1,rH(v1)-1);unlock(x))) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))) | fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);unlock(x)) | lock(x) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v1,rH(v1)-1);unlock(x)) | lock(x) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))) | fork((fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);unlock(x)) | lock(x) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v1,rH(v1)-1);unlock(x)) | lock(x) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);unlock(x)) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v1,rH(v1)-1);unlock(x)) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(wH(v1,rH(v1)*10);unlock(x)) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(wH(v1,rH(v1)-1);unlock(x)) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(fork((lock(q);(wH(v2,rH(v2)+5);unlock(q))));(lock(q);(wH(v2,rH(v2)*10);unlock(q)))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))) | nop | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {unlock(x) | wH(v1,rH(v1)*10) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {unlock(x) | wH(v1,rH(v1)-1) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(lock(q);(wH(v2,rH(v2)*10);unlock(q))) | fork((lock(q);(wH(v2,rH(v2)+5);unlock(q)))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))) | nop | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {unlock(x) | wH(v1,rH(v1)*10) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {unlock(x) | wH(v1,rH(v1)-1) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(lock(q);(wH(v2,rH(v2)*10);unlock(q))) | fork((lock(q);(wH(v2,rH(v2)+5);unlock(q)))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 20 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {unlock(x) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {unlock(x) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(lock(q);(wH(v2,rH(v2)*10);unlock(q))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {(lock(q);(wH(v2,rH(v2)+5);unlock(q))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {unlock(x) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {unlock(x) | } 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(lock(q);(wH(v2,rH(v2)*10);unlock(q))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {(lock(q);(wH(v2,rH(v2)+5);unlock(q))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))) | nop | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {} 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 100 
Exe Stack: {} 
Sym Table: q->0, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {(wH(v2,rH(v2)+5);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))) | nop | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {(wH(v2,rH(v2)+5);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {(wH(v2,rH(v2)+5);unlock(q)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {(wH(v2,rH(v2)+5);unlock(q)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))) | nop | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {unlock(q) | wH(v2,rH(v2)+5) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))) | nop | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {unlock(q) | wH(v2,rH(v2)+5) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 30  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {unlock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(nop;(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {unlock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))) | nop | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 10000 
Exe Stack: {} 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))) | nop | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(wH(v2,rH(v2)*10);unlock(q)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {unlock(q) | wH(v2,rH(v2)*10) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(lock(x);(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q)))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {unlock(q) | wH(v2,rH(v2)*10) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 35  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))) | lock(x) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {unlock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))) | lock(x) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {unlock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console:  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {} 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(rH(v1));(unlock(x);(lock(q);(print(rH(v2));unlock(q))))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(unlock(x);(lock(q);(print(rH(v2));unlock(q)))) | print(rH(v1)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(unlock(x);(lock(q);(print(rH(v2));unlock(q)))) | print(rH(v1)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(unlock(x);(lock(q);(print(rH(v2));unlock(q)))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(unlock(x);(lock(q);(print(rH(v2));unlock(q)))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(lock(q);(print(rH(v2));unlock(q))) | unlock(x) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(lock(q);(print(rH(v2));unlock(q))) | unlock(x) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(lock(q);(print(rH(v2));unlock(q))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(lock(q);(print(rH(v2));unlock(q))) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(rH(v2));unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(rH(v2));unlock(q)) | lock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(rH(v2));unlock(q)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(print(rH(v2));unlock(q)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {unlock(q) | print(rH(v2)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {unlock(q) | print(rH(v2)) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190  
File Table:  
 


Program state
ID: 1 
Exe Stack: {unlock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190 350  
File Table:  
 


Program state
ID: 1 
Exe Stack: {unlock(q) | } 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190 350  
File Table:  
 


Program state
ID: 1 
Exe Stack: {} 
Sym Table: q->2, x->1, v1->(1, int), v2->(2, int),  
Heap: 1 -> 190 2 -> 350  
Output Console: 190 350  
File Table:  
 


