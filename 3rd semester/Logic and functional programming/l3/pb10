;Define a function that replaces one node with another one in a n-tree represented as: root list_of_nodes_subtree1... list_of_nodes_subtreen)
;Eg: tree is (a (b (c)) (d) (e (f))) and node 'b' will be replace with node 'g' => tree (a (g (c)) (d) (e (f)))}

(defun replace1(l old new)
  (cond
   ((and (atom l) (equal l old)) new)
   ((atom l) l)
   ((listp l) (mapcar #'(lambda(a) (replace1 a old new)) l))
   )
)

(print (replace1 '(a (b (c)) (d) (e (f))) 'b 'g))
;(print (replace1 '(1 (2 (3)) (4) (5 (6))) 2 9))
